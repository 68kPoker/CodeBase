head     1.2;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.2
date     121.03.03.14.18.26;  author Robert;  state Exp;
branches ;
next     1.1;

1.1
date     121.02.18.23.41.34;  author Robert;  state Exp;
branches ;
next     ;


desc
@Main game routine header.
@


1.2
log
@Playable game.
@
text
@
#ifndef GAME_H
#define GAME_H

#include <exec/types.h>

#define BOARD_WIDTH  20
#define BOARD_HEIGHT 16

#define VERSION 2

enum
{
    RESULT_COMPLETED,
    RESULT_EDIT,
    RESULT_PLAY,
    RESULT_DONE,
    RESULT_QUIT,
    RESULT_RESTART,
    RESULT_START,
    RESULT_LOAD,
    RESULT_SELECT
};

enum
{
    STATE_LOADED,
    LEVEL_LOADED,
    LOAD_FAILURE
};

enum
{
    FLOOR_KIND,
    WALL_KIND,
    OBJECT_KIND,
    ITEM_KIND
};

enum
{
    NORMAL_FLOOR,
    FLAGSTONE_FLOOR,
    MUD_FLOOR,
    FILLED_FLOOR
};

enum
{
    NORMAL_WALL,
    DOOR_WALL
};

enum
{
    BOX_OBJECT,
    HERO_OBJECT,
    PLACED_OBJECT
};

enum
{
    FRUIT_ITEM,
    KEY_ITEM
};

struct Cell
{
    WORD kind:  4;
    WORD subKind: 4;
    WORD floor: 4;
};

struct Board
{
    struct Cell board[BOARD_HEIGHT][BOARD_WIDTH];
    struct boardInfo
    {
        WORD heroX, heroY;
        WORD boxes, placed, keys;
        WORD level, points;
    } info;
};


struct boardHeader
{
    ULONG version; /* Game version */
};

struct gameState
{
    struct boardHeader header;
    struct boardInfo info;
    WORD maxLevel, points;
};

#endif
@


1.1
log
@Initial revision
@
text
@d2 3
d10 15
d27 7
d43 3
a45 1
    FLAGSTONE_FLOOR
d57 2
a58 1
    HERO_OBJECT
d77 19
d97 2
@
